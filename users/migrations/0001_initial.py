# Generated by Django 5.1.5 on 2025-02-01 11:07

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', users.models.CustomUserIDField(editable=False, max_length=6, primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('full_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('is_admin', models.BooleanField(default=False, null=True)),
                ('is_email_verified', models.BooleanField(default=False, null=True)),
                ('is_approved', models.BooleanField(default=False, null=True)),
                ('is_deleted', models.BooleanField(default=False, null=True)),
                ('is_mute', models.BooleanField(default=False, null=True)),
                ('is_stripe_connect', models.BooleanField(default=False, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('device_token', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=5, null=True)),
                ('country_iso', models.CharField(blank=True, max_length=5, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('badge', models.CharField(blank=True, max_length=50, null=True)),
                ('user_type', models.CharField(choices=[('Shopper', 'Shopper'), ('Driver', 'Driver'), ('Admin', 'Admin')], default='Shopper', max_length=20, null=True)),
                ('profile_pic_url', models.URLField(blank=True, max_length=500, null=True)),
                ('location', models.JSONField(blank=True, null=True)),
                ('default_location', models.JSONField(blank=True, null=True)),
                ('total_number_of_rating', models.IntegerField(default=0, null=True)),
                ('average_rating', models.FloatField(default=0.0, null=True)),
                ('total_rating', models.IntegerField(default=0, null=True)),
                ('driver_total_number_of_rating', models.IntegerField(default=0, null=True)),
                ('driver_average_rating', models.FloatField(default=0.0, null=True)),
                ('driver_total_rating', models.IntegerField(default=0, null=True)),
                ('document_uploaded', models.BooleanField(default=False, null=True)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('setting_applied', models.BooleanField(default=False, null=True)),
                ('discovery_radius', models.IntegerField(default=0, null=True)),
                ('no_delivery', models.BooleanField(default=False, null=True)),
                ('recent_orders', models.BooleanField(default=False, null=True)),
                ('nearest_orders', models.BooleanField(default=False, null=True)),
                ('highest_earning_orders', models.BooleanField(default=False, null=True)),
                ('least_earning_orders', models.BooleanField(default=False, null=True)),
                ('filter_type', models.CharField(default='None', max_length=50, null=True)),
                ('email_id', models.EmailField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='DocumentVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_file', models.FileField(upload_to='documents/')),
                ('verification_status', models.CharField(choices=[('Pending', 'Pending'), ('Verified', 'Verified'), ('Rejected', 'Rejected')], default='Pending', max_length=20, null=True)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Verification',
                'verbose_name_plural': 'Document Verifications',
            },
        ),
    ]
